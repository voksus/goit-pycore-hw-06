import os
import random as rnd
from model import MESSAGES, ModelError, AddressBook, Record

# ============================ –ö–û–ù–°–¢–ê–ù–¢–ò –¢–ê –°–õ–û–í–ù–ò–ö –ü–û–í–Ü–î–û–ú–õ–ï–ù–¨ ============================

class Colors:
    RED    = '\033[91m'
    GREEN  = '\033[92m'
    YELLOW = '\033[93m'
    BLUE   = '\033[94m'
    BOLD   = '\033[1m'
    END    = '\033[0m'

MESSAGES = {
    # –ü–æ–º–∏–ª–∫–∏
    "INVALID_PHONE"      : f"{Colors.RED}–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞: {{phone}}{Colors.RED}. –ú–∞—î –±—É—Ç–∏ 10 —Ü–∏—Ñ—Ä.{Colors.END}",
    "INVALID_EMAIL"      : f"{Colors.RED}–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email: {{email}}{Colors.RED}.{Colors.END}",
    "INVALID_NAME"       : f"{Colors.RED}–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —ñ–º‚Äô—è {{name}}{Colors.RED}. –õ–∏—à–µ –ª—ñ—Ç–µ—Ä–∏, –∞–ø–æ—Å—Ç—Ä–æ—Ñ, –¥–µ—Ñ—ñ—Å –¥–æ–∑–≤–æ–ª–µ–Ω–æ.",
    "CONTACT_EXISTS"     : f"{Colors.YELLOW}–ö–æ–Ω—Ç–∞–∫—Ç –∑ —ñ–º–µ–Ω–µ–º {{name}}{Colors.YELLOW} –≤–∂–µ —ñ—Å–Ω—É—î.{Colors.END}",
    "CONTACT_NOT_FOUND"  : f"{Colors.YELLOW}–ö–æ–Ω—Ç–∞–∫—Ç –∑ —ñ–º–µ–Ω–µ–º {{name}}{Colors.YELLOW} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.{Colors.END}",
    "PHONE_NOT_FOUND"    : f"{Colors.YELLOW}–ù–æ–º–µ—Ä {{phone}}{Colors.YELLOW} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}}{Colors.YELLOW}.{Colors.END}",
    "EMAIL_NOT_FOUND"    : f"{Colors.YELLOW}Email {{email}}{Colors.YELLOW} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}}{Colors.YELLOW}.{Colors.END}",
    "DUPLICATE_PHONE"    : f"{Colors.YELLOW}–ù–æ–º–µ—Ä {{phone}}{Colors.YELLOW} –≤–∂–µ —ñ—Å–Ω—É—î —É –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}}{Colors.YELLOW}.{Colors.END}",
    "DUPLICATE_EMAIL"    : f"{Colors.YELLOW}Email {{email}}{Colors.YELLOW} –≤–∂–µ —ñ—Å–Ω—É—î —É –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}}{Colors.YELLOW}.{Colors.END}",
    "EMPTY_CONTACTS"     : f"{Colors.BLUE}–£ –∫–Ω–∏–∑—ñ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É.{Colors.END}",
    "INVALID_INDEX"      : f"{Colors.RED}–í–∫–∞–∑–∞–Ω–æ –Ω–µ–¥—ñ–π—Å–Ω–∏–π —ñ–Ω–¥–µ–∫—Å: {{index}}{Colors.RED}.{Colors.END}",
    "EMPTY_RECORD"       : f"{Colors.BLUE}–ö–æ–Ω—Ç–∞–∫—Ç {{name}}{Colors.BLUE} –Ω–µ –º—ñ—Å—Ç–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —á–∏ email.{Colors.END}",

    # üü¢ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    "CONTACT_ADDED"      : f"{Colors.GREEN}–ö–æ–Ω—Ç–∞–∫—Ç {{name}}{Colors.GREEN} –¥–æ–¥–∞–Ω–æ –¥–æ –∞–¥—Ä–µ—Å–Ω–æ—ó –∫–Ω–∏–≥–∏.",
    "CONTACT_CHANGED"    : f"{Colors.GREEN}–ö–æ–Ω—Ç–∞–∫—Ç {{name}}{Colors.GREEN} –æ–Ω–æ–≤–ª–µ–Ω–æ. –ù–æ–≤–∏–π –Ω–æ–º–µ—Ä: {{phone}}{Colors.GREEN}.{Colors.END}",
    "CONTACT_DELETED"    : f"{Colors.GREEN}–ö–æ–Ω—Ç–∞–∫—Ç {{name}}{Colors.GREEN} —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.{Colors.END}",

    # ‚úÖ –£—Å–ø—ñ—à–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—óf
    "PHONE_ADDED"        : f"–ù–æ–º–µ—Ä {{phone}} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}}.",
    "EMAIL_ADDED"        : f"Email {{email}} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}}.",
    "PHONE_CHANGED"      : f"–ù–æ–º–µ—Ä –ø—ñ–¥ —ñ–Ω–¥–µ–∫—Å–æ–º {{index}} –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}} –∑–∞–º—ñ–Ω–µ–Ω–æ –Ω–∞ {{phone}}.",
    "EMAIL_CHANGED"      : f"Email –ø—ñ–¥ —ñ–Ω–¥–µ–∫—Å–æ–º {{index}} –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}} –∑–∞–º—ñ–Ω–µ–Ω–æ –Ω–∞ {{email}}.",
    "PHONE_DELETED"      : f"–ù–æ–º–µ—Ä –ø—ñ–¥ —ñ–Ω–¥–µ–∫—Å–æ–º {{index}} –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}} –≤–∏–¥–∞–ª–µ–Ω–æ.",
    "EMAIL_DELETED"      : f"Email –ø—ñ–¥ —ñ–Ω–¥–µ–∫—Å–æ–º {{index}} –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—É {{name}} –≤–∏–¥–∞–ª–µ–Ω–æ.",

    # ‚ÑπÔ∏è –°–∏—Å—Ç–µ–º–Ω—ñ
    "COMMAND_PROMPT"     : "–í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É: ",
    "UNKNOWN_COMMAND"    : f"{Colors.YELLOW}–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞: {{cmd}}{Colors.YELLOW}. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.{Colors.END}",
    "GOODBYE_MESSAGE"    : f"{Colors.GREEN}–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è üëã{Colors.END}",
}
hello_options = (
        '–ü—Ä–∏–≤—ñ—Ç! –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?', '–í—ñ—Ç–∞—é! –Ø —Ç—É—Ç, —â–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏.', '–î–æ–±—Ä–∏–π –¥–µ–Ω—å! –Ø –¥–æ –≤–∞—à–∏—Ö –ø–æ—Å–ª—É–≥.',
        '–ü—Ä–∏–≤—ñ—Ç, —è–∫ —Å–ø—Ä–∞–≤–∏?', '–ì–µ–π, —è–∫ —Å—è –º–∞—î—à?', '–ü—Ä–∏–≤—ñ—Ç-–ø—Ä–∏–≤—ñ—Ç! –©–æ —Ç—Ä–µ–±–∞? üòâ', '–ì–µ–π! –ß–µ–∫–∞—é –Ω–∞ —Ç–≤–æ—ó –∫–æ–º–∞–Ω–¥–∏.',
        '–ô–æ! –©–æ —Å—å–æ–≥–æ–¥–Ω—ñ —Ä–æ–±–∏–º–æ?', '–û, –ø—Ä–∏–≤—ñ—Ç—É–ª—ñ!', '–°–ª—É—Ö–∞—é —É–≤–∞–∂–Ω–æ ü§ñ', '–ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏, –¥—Ä—É–∂–µ?',
        '–í—ñ—Ç–∞—é! –Ø–∫ –º–æ–∂—É –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º?', '–î–æ–±—Ä–∏–π –¥–µ–Ω—å! –©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?', '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—à—É! –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?',
        '–°–µ—Ä–≤—ñ—Å –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ. –©–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ?', '–ë—ñ–ø-–±—É–ø! –†–æ–±–æ–±–æ—Ç –¥–æ –≤–∞—à–∏—Ö –ø–æ—Å–ª—É–≥! ü§ñ',
        '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–≤—ñ—á–ª–∏–≤–æ—Å—Ç—ñ... 100% ‚Äì –ü—Ä–∏–≤—ñ—Ç!', '–•—Ç–æ—Å—å –≤–∏–∫–ª–∏–∫–∞–≤ —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç? üëÄ',
        '–ü—Ä–∏–≤—ñ—Ç, –ª—é–¥—Å—å–∫–∞ —ñ—Å—Ç–æ—Ç–æ! –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ?', '–•–µ–π! –î–∞–≤–∞–π –ø—Ä–∞—Ü—é–≤–∞—Ç–∏! üöÄ', '–ó–¥–æ—Ä–æ–≤–µ–Ω—å–∫—ñ –±—É–ª–∏! –©–æ —Ç—Ä–µ–±–∞?',
        '–ü–æ—ó—Ö–∞–ª–∏! –Ø –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!', '–ì–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–ª–∏–∫—É! –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ?', '–Ø —Ç—É—Ç! –ü–æ—á–Ω—ñ–º–æ.',
        '–ê–¥—Ä–µ—Å–Ω–∞ –∫–Ω–∏–≥–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞! –©–æ —Ä–æ–±–∏–º–æ?', '–ó–∞–ø–∏—Ç–∏ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è! –ß–∏–º –¥–æ–ø–æ–º–æ–≥—Ç–∏?',
        '–ö–æ–≥–æ—Å—å —à—É–∫–∞—î–º–æ? –Ø –≥–æ—Ç–æ–≤–∏–π!', '–ö–æ–Ω—Ç–∞–∫—Ç–∏? –ö–æ–º–∞–Ω–¥–∏? –©–æ —Ü—ñ–∫–∞–≤–∏—Ç—å?', '–ü–æ—á–∏–Ω–∞—î–º–æ —Ä–æ–±–æ—Ç—É. –í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É.'
    )

# ============================ –ë–ê–ó–û–í–Ü –ú–ï–¢–û–î–ò ============================

def clear_screen() -> None:
    os.system('cls' if os.name == 'nt' else 'clear')

def say_hello():
    print(hello_options[rnd.randint(0, len(hello_options) - 1)])

# ============================ –ú–ï–¢–û–î–ò –í–ó–ê–Ñ–ú–û–î–Ü–á ============================

def ask() -> str:
    return input(MESSAGES["COMMAND_PROMPT"])

def info(key: str, **kwargs) -> None:
    print(MESSAGES[key].format(**kwargs))

def success(key: str, **kwargs) -> None:
    print(MESSAGES[key].format(**kwargs))

def warn(key: str, **kwargs) -> None:
    print(MESSAGES[key].format(**kwargs))

def error(key: str, **kwargs) -> None:
    print(MESSAGES[key].format(**kwargs))

# ============================ –°–ü–ï–¶–ò–§–Ü–ß–ù–Ü –ú–ï–¢–û–î–ò –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø ============================

def contact_added(name: str, phone: str) -> None:
    success("CONTACT_ADDED", name=name)

def contact_changed(name: str, phone: str) -> None:
    success("CONTACT_CHANGED", name=name, phone=phone)

def contact_deleted(name: str) -> None:
    success("CONTACT_DELETED", name=name)

def contact_found(record: Record) -> None:
    phones = "; ".join(f"[{idx}] {p.value}" for idx, p in record.phones.items())
    emails = "; ".join(f"[{idx}] {e.value}" for idx, e in record.emails.items())
    if not phones and not emails:
        info("EMPTY_RECORD", name=record.name.value)
        return
    print(f"–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ–Ω—Ç–∞–∫—Ç {Colors.BOLD}{record.name.value}:{Colors.END}")
    if phones:
        print(f" –¢–µ–ª–µ—Ñ–æ–Ω–∏: {phones}")
    if emails:
        print(f" Email: {emails}")

def contacts_not_found() -> None:
    warn("EMPTY_CONTACTS")

def show_all_contacts(book: AddressBook) -> None:
    print("–£—Å—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏:")
    contacts = book.data.values()
    for record in contacts:
        contact_found(record)
    print(f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Å—ñ–± –≤ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö: {str(len(contacts))}")

def unknown_command(cmd: str) -> None:
    warn("UNKNOWN_COMMAND", cmd=cmd)

def show_help() -> None:
    print(f"{Colors.BOLD}–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:{Colors.END}")
    print("  add <name> <phone>          - –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç.")
    print("  change <name> p.<i> <phone> - –ó–º—ñ–Ω–∏—Ç–∏ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º.")
    print("  change <name> e.<i> <phone> - –ó–º—ñ–Ω–∏—Ç–∏ emial –∫–æ–Ω—Ç–∞–∫—Ç—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º.")
    print("  remove <name>               - –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç.")
    print("  phone <name>                - –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç—É –∑–∞ —ñ–º'—è–º.")
    print("  all                         - –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏.")
    print("  clrscr                      - –û—á–∏—Å—Ç–∏—Ç–∏ –µ–∫—Ä–∞–Ω.")
    print("  ?                           - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É.")
